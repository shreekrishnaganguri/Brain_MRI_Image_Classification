{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Ybaczp_JOsGUfQCp6-nAiBslMRJtRkfb","timestamp":1719983571475},{"file_id":"1gW5ok_A-VXgIBKzEkG3vU_vsdxfH0s-s","timestamp":1719899465029},{"file_id":"1rnmnY-TeyfSROXXIavQbQ_AnsVA8NE2l","timestamp":1719894899516},{"file_id":"1G0poReEBrTBxF0aabYIiDCta2sFReUgH","timestamp":1715853852962},{"file_id":"1zdQi7fvahVV02bJ8OxLtimPtFnswd7Aw","timestamp":1685445753995},{"file_id":"1mRPWF3dyrVqtWd8pK2vKkP8MmayvgLww","timestamp":1671468283200},{"file_id":"1FjnEtehY7hCNfLPn1i4c0ci0GmJroW_q","timestamp":1666432586964}],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# Mount the drive"],"metadata":{"id":"5z6p7yHaYpro"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"vJT4hW59YfVu","executionInfo":{"status":"ok","timestamp":1719983727480,"user_tz":-330,"elapsed":33558,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"bf038294-e429-4279-9679-ccb6181ee9f7","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["#Connecting this collab notebook to my account.\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["# Load a saved model\n","Please change the path value below"],"metadata":{"id":"28UQSw8EY000"}},{"cell_type":"code","source":["import tensorflow as tf\n","#path of the saved model\n","loaded_model = tf.keras.models.load_model('/content/drive/MyDrive/AIClub_AP_Shree_Krishna /CodeLab/Project/Best Model/Brain_Tumor_MRI_Image_Classification_30_0.01.h5')"],"metadata":{"id":"1L_9dSteY0bT","executionInfo":{"status":"ok","timestamp":1719983841041,"user_tz":-330,"elapsed":9339,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["# Test Images Path"],"metadata":{"id":"WHtlvsgYeDhx"}},{"cell_type":"code","source":["# Provide the test path to the folder\n","src_folder = \"/content/drive/MyDrive/AIClub_AP_Shree_Krishna /CodeLab/Project/Dataset/Testing\""],"metadata":{"id":"CBSvWSldeH6K","executionInfo":{"status":"ok","timestamp":1719983867310,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# Dictionary of the labels predicted by the model\n"],"metadata":{"id":"tx_D61Hud9Ux"}},{"cell_type":"code","source":["import os\n","\n","#predicted labels\n","dict_labels = [file for file in os.listdir(src_folder) if os.path.isdir(os.path.join(src_folder, file))]\n","dict_labels.sort()\n","dict_labels = dict(enumerate(dict_labels))\n","print(dict_labels)"],"metadata":{"id":"jVdyOyrpg92t","executionInfo":{"status":"ok","timestamp":1719983874033,"user_tz":-330,"elapsed":659,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"097d7abe-f1dc-462e-bf59-7dfa9db7e733","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["{0: 'glioma_tumor', 1: 'meningioma_tumor', 2: 'no_tumor', 3: 'pituitary_tumor'}\n"]}]},{"cell_type":"markdown","source":["# Create a list of the images in the test and train folders"],"metadata":{"id":"hsr_CjPZdwrd"}},{"cell_type":"code","source":["import os\n","directory_contents = []\n","# Find all subfolders in the source folder src_folder\n","for index in range(0,len(dict_labels)):\n","  directory_contents.append(dict_labels[index])\n","print(directory_contents)\n","\n","# List the files in each subfolder\n","list_files = []\n","# Find all the files\n","for folder_name in directory_contents:\n","  files_list = os.listdir(os.path.join(src_folder, folder_name))\n","  list_files.append(files_list)\n","print(list_files)"],"metadata":{"id":"Xkrk7OP9d9CT","executionInfo":{"status":"ok","timestamp":1719983879754,"user_tz":-330,"elapsed":624,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"d86557cb-a26c-41dd-f34f-ddf2217a7f52","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["['glioma_tumor', 'meningioma_tumor', 'no_tumor', 'pituitary_tumor']\n","[['image(19).jpg', 'image(20).jpg', 'image(55).jpg', 'image(59).jpg', 'image(51).jpg', 'image.jpg', 'image(95).jpg', 'image(74).jpg', 'image(47).jpg', 'image(98).jpg', 'image(97).jpg', 'image(58).jpg', 'image(99).jpg', 'image(48).jpg', 'image(7).jpg', 'image(37).jpg', 'image(38).jpg', 'image(75).jpg', 'image(78).jpg', 'gg (380).jpg', 'gg (245).jpg', 'gg (628).jpg', 'gg (199).jpg', 'gg (198).jpg', 'gg (330).jpg', 'gg (557).jpg', 'gg (375).jpg', 'gg (525).jpg', 'gg (427).jpg', 'gg (388).jpg', 'gg (635).jpg', 'gg (124).jpg', 'gg (462).jpg', 'gg (599).jpg', 'gg (522).jpg', 'gg (399).jpg', 'gg (140).jpg', 'gg (554).jpg', 'gg (191).jpg', 'gg (23).jpg', 'gg (366).jpg', 'gg (269).jpg', 'gg (300).jpg', 'gg (327).jpg', 'gg (457).jpg', 'gg (581).jpg', 'gg (528).jpg', 'gg (618).jpg', 'gg (455).jpg', 'gg (244).jpg', 'gg (42).jpg', 'gg (397).jpg', 'gg (600).jpg', 'gg (632).jpg', 'gg (118).jpg', 'gg (555).jpg', 'gg (54).jpg', 'gg (517).jpg', 'gg (355).jpg', 'gg (410).jpg', 'gg (619).jpg', 'gg (36).jpg', 'gg (15).jpg', 'gg (448).jpg', 'gg (205).jpg', 'gg (143).jpg', 'gg (533).jpg', 'gg (623).jpg', 'gg (333).jpg', 'gg (239).jpg', 'gg (475).jpg', 'gg (672).jpg', 'gg (650).jpg', 'gg (647).jpg', 'gg (813).jpg', 'gg (724).jpg', 'gg (792).jpg', 'gg (721).jpg', 'gg (697).jpg', 'gg (680).jpg', 'gg (790).jpg', 'gg (780).jpg', 'gg (770).jpg', 'gg (797).jpg', 'gg (652).jpg', 'gg (816).jpg', 'gg (717).jpg', 'gg (761).jpg', 'gg (771).jpg', 'gg (815).jpg', 'gg (763).jpg', 'gg (821).jpg'], ['image(16).jpg', 'image(33).jpg', 'image(17).jpg', 'image(126).jpg', 'image(19).jpg', 'image(118).jpg', 'image(29).jpg', 'image(65).jpg', 'image(44).jpg', 'image(56).jpg', 'image(39).jpg', 'image(98).jpg', 'image(80).jpg', 'm1(89).jpg', 'm (12).jpg', 'm3 (207).jpg', 'm1(142).jpg', 'm3 (163).jpg', 'm3 (243).jpg', 'm3 (32).jpg', 'm (72).jpg', 'm2 (150).jpg', 'm3 (203).jpg', 'm2 (92).jpg', 'm1(45).jpg', 'm2 (143).jpg', 'm3 (19).jpg', 'm3 (182).jpg', 'm (178).jpg', 'm3 (117).jpg', 'm3 (151).jpg', 'm1(169).jpg', 'm2 (16).jpg', 'm2 (149).jpg', 'm1(113).jpg', 'm1(163).jpg', 'm1(34).jpg', 'm3 (56).jpg', 'm (37).jpg', 'm (30).jpg', 'm1(132).jpg', 'm2 (70).jpg', 'm1(121).jpg', 'm2 (152).jpg', 'm2 (103).jpg', 'm1(189).jpg', 'm1(15).jpg', 'm1(124).jpg', 'm1(13).jpg', 'm (184).jpg', 'm2 (61).jpg', 'm (56).jpg', 'm2 (78).jpg', 'm (84).jpg', 'm1(94).jpg', 'm1(157).jpg', 'm2 (11).jpg', 'm2 (97).jpg', 'm (93).jpg', 'm2 (157).jpg', 'm1(66).jpg', 'm (18).jpg', 'm2 (46).jpg', 'm3 (29).jpg', 'm2 (64).jpg', 'm2 (5).jpg', 'm (177).jpg', 'm2 (52).jpg', 'm1(196).jpg', 'm (43).jpg', 'm3 (242).jpg', 'm3 (162).jpg', 'm3 (235).jpg', 'm (65).jpg', 'm (185).jpg', 'm3 (125).jpg', 'm3 (16).jpg', 'm2 (123).jpg', 'm1(175).jpg', 'm (96).jpg', 'm1(17).jpg', 'm2 (128).jpg', 'm1(151).jpg', 'm (79).jpg', 'm2 (142).jpg', 'm (7).jpg', 'm1(153).jpg', 'm2 (109).jpg', 'm2 (33).jpg', 'm3 (9).jpg', 'm3 (87).jpg', 'm3 (99).jpg', 'm3 (97).jpg'], ['image(95).jpg', 'image(210).jpg', 'image (26).jpg', 'image(135).jpg', 'image(196).jpg', 'image (54).jpg', 'image(115).jpg', 'image(209).jpg', 'image(239).jpg', 'image(277).jpg', 'image(175).jpg', 'image(249).jpg', 'image (21).jpg', 'image(265).jpg', 'image(266).jpg', 'image(61).jpg', 'image(307).jpg', 'image(83).jpg', 'image(134).jpg', 'image (16).jpg', 'image(281).jpg', 'image(222).jpg', 'image(139).jpg', 'image(302).jpg', 'image(269).jpg', 'image(33).jpg', 'image(71).jpg', 'image(165).jpg', 'image(26).jpg', 'image(254).jpg', 'image(187).jpg', 'image(90).jpg', 'image(24).jpg', 'image(193).jpg', 'image(233).jpg', 'image(142).jpg', 'image (42).jpg', 'image(48).jpg', 'image(286).jpg'], ['image(52).jpg', 'image(78).jpg', 'image(8).jpg', 'image(37).jpg', 'image(21).jpg', 'image(54).jpg', 'image(30).jpg', 'p (333).jpg', 'p (312).jpg', 'p (249).jpg', 'p (399).jpg', 'p (140).jpg', 'p (444).jpg', 'p (288).jpg', 'p (371).jpg', 'p (465).jpg', 'p (37).jpg', 'p (380).jpg', 'p (317).jpg', 'p (2).jpg', 'p (36).jpg', 'p (38).jpg', 'p (244).jpg', 'p (454).jpg', 'p (136).jpg', 'p (290).jpg', 'p (199).jpg', 'p (158).jpg', 'p (264).jpg', 'p (426).jpg', 'p (405).jpg', 'p (447).jpg', 'p (240).jpg', 'p (390).jpg', 'p (385).jpg', 'p (413).jpg', 'p (169).jpg', 'p (224).jpg', 'p (118).jpg', 'p (359).jpg', 'p (339).jpg', 'p (238).jpg', 'p (137).jpg', 'p (266).jpg', 'p (157).jpg', 'p (18).jpg', 'p (330).jpg', 'p (210).jpg', 'p (464).jpg', 'p (483).jpg', 'p (107).jpg', 'p (475).jpg', 'p (286).jpg', 'p (594).jpg', 'p (556).jpg', 'p (733).jpg', 'p (506).jpg', 'p (662).jpg', 'p (602).jpg', 'p (684).jpg', 'p (545).jpg', 'p (686).jpg', 'p (749).jpg', 'p (650).jpg', 'p (519).jpg', 'p (92).jpg', 'p (82).jpg', 'p (788).jpg', 'p (50).jpg', 'p (618).jpg', 'p (543).jpg', 'p (807).jpg', 'p (644).jpg', 'p (558).jpg', 'p (64).jpg', 'p (671).jpg', 'p (587).jpg', 'p (798).jpg', 'p (611).jpg', 'p (542).jpg', 'p (606).jpg', 'p (660).jpg', 'p (709).jpg', 'p (641).jpg', 'p (526).jpg', 'p (604).jpg', 'p (533).jpg', 'p (648).jpg', 'p (504).jpg', 'p (762).jpg']]\n"]}]},{"cell_type":"markdown","source":["# Create the predictions and label lists"],"metadata":{"id":"gkG1taZ5hUgC"}},{"cell_type":"code","source":["from keras.applications.mobilenet_v2 import preprocess_input\n","from tensorflow.keras.preprocessing import image\n","import numpy as np\n","# A counter to increment after processing each categoty\n","category_count = 0\n","# label list\n","label = []\n","# Prediction list\n","predictions = []\n","y_score = []\n","for categories in list_files:\n","  # Create the labels while iterating over each category\n","  label_temp = np.ones((len(categories))).astype(int)*category_count\n","  print(label_temp)\n","  # Add it to existing labels\n","  label.extend(label_temp)\n","  for file_name in categories:\n","    # test image file\n","    img_path = src_folder + '/' + directory_contents[category_count] + '/' + file_name\n","    img = image.load_img(img_path, target_size=(224,224))\n","    img_array = image.img_to_array(img)\n","    img_batch = np.expand_dims(img_array, axis=0)\n","    img_preprocessed = preprocess_input(img_batch)\n","    prediction = loaded_model.predict(img_preprocessed)\n","    y_score.append(prediction)\n","    # Save the index of maximum probability\n","    predictions.append(np.argmax(prediction))\n","  category_count += 1\n"],"metadata":{"id":"sb0k47-zhbKJ","executionInfo":{"status":"ok","timestamp":1719984143177,"user_tz":-330,"elapsed":254143,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"6afe7450-8131-4d1f-97d5-491ed52b9844","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n","1/1 [==============================] - 3s 3s/step\n","1/1 [==============================] - 0s 44ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 49ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 52ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 43ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 90ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 28ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 41ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 20ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 35ms/step\n","[2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n"," 2 2]\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 33ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","[3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"," 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"," 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3]\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 36ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 30ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 27ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 40ms/step\n","1/1 [==============================] - 0s 31ms/step\n","1/1 [==============================] - 0s 38ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 24ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 35ms/step\n","1/1 [==============================] - 0s 39ms/step\n","1/1 [==============================] - 0s 34ms/step\n","1/1 [==============================] - 0s 21ms/step\n","1/1 [==============================] - 0s 26ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 22ms/step\n","1/1 [==============================] - 0s 32ms/step\n","1/1 [==============================] - 0s 37ms/step\n","1/1 [==============================] - 0s 25ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 23ms/step\n","1/1 [==============================] - 0s 29ms/step\n","1/1 [==============================] - 0s 24ms/step\n"]}]},{"cell_type":"markdown","source":["# Consfusion Matrix"],"metadata":{"id":"cBPRvi3Jfro_"}},{"cell_type":"code","source":["from sklearn.metrics import ConfusionMatrixDisplay, confusion_matrix\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","display_labels = sorted(directory_contents)\n","plt.figure(figsize = (10,10))\n","sns.heatmap(confusion_matrix(label,predictions),\n","            annot = True,\n","            fmt = 'g',\n","            cmap = \"Blues\",\n","            xticklabels=display_labels,\n","            yticklabels = display_labels,\n","            annot_kws={\n","                'fontsize': 8,\n","                'fontweight': 'bold',\n","                'fontfamily': 'serif'\n","            })\n","plt.xlabel(\"Predicted Label\")\n","plt.ylabel(\"True Label\")\n","plt.title(\"Confusion Matrix\")\n","#ConfusionMatrixDisplay.from_predictions(label, predictions, display_labels=display_labels, cmap=\"binary\")\n","plt.show()"],"metadata":{"id":"8GCZrpBf0kOA","executionInfo":{"status":"ok","timestamp":1719984162668,"user_tz":-330,"elapsed":1765,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"6edaaa15-40ca-4595-930c-d0409d78c1ed","colab":{"base_uri":"https://localhost:8080/","height":872}},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Classification Report"],"metadata":{"id":"qrNetpNVfuky"}},{"cell_type":"code","source":["#classification reports\n","from sklearn.metrics import classification_report\n","print(classification_report(label,predictions))"],"metadata":{"id":"9jp-7oCKOSeH","executionInfo":{"status":"ok","timestamp":1719984224429,"user_tz":-330,"elapsed":795,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"d7efc52d-5481-449e-870a-3e566407a95e","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.93      0.90      0.92        92\n","           1       0.85      0.89      0.87        93\n","           2       0.85      0.74      0.79        39\n","           3       0.94      0.97      0.95        90\n","\n","    accuracy                           0.90       314\n","   macro avg       0.89      0.88      0.88       314\n","weighted avg       0.90      0.90      0.90       314\n","\n"]}]}]}